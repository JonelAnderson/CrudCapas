@model List<Entities.Entities.ParameterSystem>
@using Presentacion.Models.Language
@{
    LanguageModelButtons LanguageButtons = new LanguageModelButtons().GetLanguageForView();
    ViewData["Title"] = "Usuario";
    ViewData["Titulo"] = "USER";
}
<div class="border-decoration ">
    <div class="row">
        <div class="col-sm-12 col-md-12 header-card-title">
            <div class="table-title">
                <div class="float-start">
                    <h3><strong>@LanguageButtons.List_user</strong></h3>

                </div>
                <div class="float-end">
                    <button class="btn btn-primary button-title" id="btnNuevo"><em class='fa fa-plus'></em> @LanguageButtons.New_user</button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <div class="table-responsive">
                <table class="table table-bordered" id="tbUser">
                    <thead>
                        <tr class="text-center">
                            <th>ID</th>
                            <th>@LanguageButtons.Names</th>
                            <th>@LanguageButtons.LastName</th>
                            <th>@LanguageButtons.Email</th>
                            <th>@LanguageButtons.Phone</th>
                            <th>@LanguageButtons.Action</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>

<!--Inicio Modal-->
<div class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" id="MiModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@LanguageButtons.User_detail</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form>
                <div class="modal-body">
                
                    <input type="hidden" id="txtId" value="0" />
                    <div class="mb-2">
                        <label>@LanguageButtons.Names</label>
                        <input type="text" class="form-control" id="txtName" required />
                    </div>
                    <div class="mb-2">
                        <label>@LanguageButtons.LastName</label>
                        <input type="text" class="form-control" id="txtlastName" required />
                    </div>
                    <div class="mb-2">
                        <label>@LanguageButtons.Email</label>
                        <input type="text" class="form-control" id="txtEmail" required />
                    </div>
                    <div class="mb-2">
                        <label>@LanguageButtons.Phone</label>
                        <input type="text" class="form-control" id="txtPhone" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><em class='bx bx-x'></em>&nbsp @LanguageButtons.Close</button>
                    <button type="submit" class="btn btn-primary" id="btnGuardar"><em class='bx bx-save'></em>&nbsp @LanguageButtons.Save</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!--Fin Modal-->
@section Scripts{

    <script>

        const Modelo_base = {
            idUser: 0,
            name: "",
            lastName: "",
            email: "",
            phone: ""
        }

        $(document).ready(() => {

            listUsers();
        })

        function mostrarModal(request) {

            $("#txtId").val(request.idUser);
            $("#txtName").val(request.name)
            $("#txtlastName").val(request.lastName)
            $("#txtEmail").val(request.email)
            $("#txtPhone").val(request.phone)

            $('.modal').modal('show');
        }

        $("#btnNuevo").click(() => {

            mostrarModal(Modelo_base);
        })

        $("#btnGuardar").click(() => {
            let NuevoModelo = Modelo_base;
                NuevoModelo["idUser"] = $("#txtId").val();
                NuevoModelo["name"] = $("#txtName").val();
                NuevoModelo["lastName"] = $("#txtlastName").val();
                NuevoModelo["email"] = $("#txtEmail").val();
                NuevoModelo["phone"] = $("#txtPhone").val();
            

            if ($("#txtId").val() == "0") {
                fetch("User/Insert", {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json;charset=utf-8'
                    },
                    body: JSON.stringify(NuevoModelo)
                })
                    .then((response) => {
                        return response.ok ? response.json() : Promise.reject(response)
                    })
                    .then((dataJson) => {

                        if (dataJson.valor) {
                            alert("registrado");
                            $('.modal').modal('hide');
                             listUsers();
                           
                        }
                    })
            } else {
                fetch("User/Update", {
                    method: "PUT",
                    headers: {
                        'Content-Type': 'application/json;charset=utf-8'
                    },
                    body: JSON.stringify(NuevoModelo)
                })
                    .then((response) => {
                        return response.ok ? response.json() : Promise.reject(response)
                    })
                    .then((dataJson) => {

                        if (dataJson.valor) {
                            alert("editado");
                            $('.modal').modal('hide');
                            listUsers();
                        }
                    })

            }

        })

        function listUsers() {

            fetch("User/Listar")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response)
                })
                .then((dataJson) => {
                    $("#tbUser tbody").html("");

                    let valores = isObjEmpty(dataJson);

                    if (valores == true) {
                        //console.log("no existe datos");
                        $("#tbUser tbody").addClass("text-center").append(
                            $("<tr>").append(
                                $("<td>").attr("colspan", "6").append(
                                    $("<h4>").text("no existe datos en tabla")
                                )
                            )
                        )

                    } else {
                        //console.log("multiples datos");
                        dataJson.forEach((item) => {


                            $("#tbUser tbody").addClass("text-center").append(

                                $("<tr>").append(
                                    $("<td>").text(item.idUser),
                                    $("<td>").text(item.name),
                                    $("<td>").text(item.lastName),
                                    $("<td>").text(item.email),
                                    $("<td>").text(item.phone),
                                    $("<td>").append(
                                        $("<button>").addClass("btn btn-primary btn-sm me-2 btn-editar fa fa-pencil-square-o").data("request", item).attr("title", "Edit"),
                                        $("<button>").addClass("btn btn-danger btn-sm me-2 btn-eliminar fa fa-trash-o").data("idUser", item.idUser).attr("title", "Delete"),
                                        $("<button>").addClass("btn btn-primary btn-sm fa fa-eye").attr("title", "Show").attr("disabled", false)
                                            
                                    )
                                )

                            )


                        })
                    }
                })

        }

        $("#tbUser tbody").on("click", ".btn-editar", function() {
            let user = $(this).data("request")

            mostrarModal(user)
        })

        $("#tbUser tbody").on("click", ".btn-show", function() {
            let user = $(this).data("request")

            mostrarModal(user)
        })


        $("#tbUser tbody").on("click", ".btn-eliminar", function() {
            let idUser = $(this).data("idUser")

            let resultado = window.confirm("¿Desea eliminar el usuario?");


            if (resultado) {


                fetch("User/Delete?id=" + idUser, {
                    method: "DELETE"
                })
                    .then((response) => {
                        return response.ok ? response.json() : Promise.reject(response)
                    })
                    .then((dataJson) => {

                        if (dataJson.valor) {
                            listUsers();
                        }
                    })


            }

        })

        function isObjEmpty(obj) {
            return Object.keys(obj).length === 0;
        }



    </script>

}