@model Presentacion.Models.ViewModel.TratamientoVM
@using Presentacion.Models.ViewModel

@{
    UserVM users = new UserVM();
    ViewData["Title"] = "Tratamiento";
    ViewData["Titulo"] = "Tratamiento";
}
<div class="border-decoration ">
    <div class="row">
        <div class="col-sm-12 col-md-12 header-card-title">
            <div class="table-title">
                <div class="float-start">
                    <h3><strong>Treatment</strong></h3>

                </div>
                <div class="float-end">
                    <button class="btn btn-primary button-title" id="btnNuevo"><em class='fa fa-plus'></em> New register</button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <div class="table-responsive">
                <table class="table table-bordered" id="tbTratamiento">
                    <thead>
                        <tr class="text-center">
                            <th>ID</th>
                            <th>Type</th>
                            <th>Medicament</th>
                            <th>Description</th>
                            <th>Responsable</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>

<!--Inicio Modal-->
<div class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" id="MiModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Treatment details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form autocomplete="false">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="modal-body">
                    <input type="hidden" id="txtId" value="0" />
                    <div class="mb-2">
                        <label asp-for="Tipo" class="control-label">Tipo</label>
                        <input  asp-for="Tipo" type="text" class="form-control" id="txtTipo" />
                         <span asp-validation-for="Tipo" class="text-danger"></span>
                    </div>
                    <div class="mb-2">
                        <label asp-for="Medicamento" class="control-label">Medicamento</label>
                        <input asp-for="Medicamento" type="text" class="form-control" id="txtMedicamento" />
                        <span asp-validation-for="Medicamento" class="text-danger"></span>
                    </div>
                    <div class="mb-2">
                        <label asp-for="Descripcion" class="control-label">Descripcion</label>
                        <input asp-for="Descripcion" type="text" class="form-control" id="txtDescripcion" />
                        <span asp-validation-for="Descripcion" class="text-danger"></span>
                    </div>
                    <div class="mb-2">
                        <label asp-for="IdUser" class="control-label">Encargado</label>
                      
                        <input asp-for="IdUser" type="number" class="form-control" id="txtUser" />
                        <span asp-validation-for="IdUser" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><em class='bx bx-x'></em>&nbsp Close</button>
                    <button type="submit" class="btn btn-primary" id="btnGuardar"><em class='bx bx-save'></em>&nbsp Save</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!--Fin Modal-->
@section Scripts{
     @{
        <Partial Name="_ValidationScriptsPartial" />
    }

    <script>

        const Modelo_base = {
            idTratamiento: 0,
            tipo: "",
            medicamento: "",
            descripcion: "",
            idUser: 0
        }

        $(document).ready(() => {

            listTratamientos();
        })

        function mostrarModal(request) {

            $("#txtId").val(request.idTratamiento);
            $("#txtTipo").val(request.tipo)
            $("#txtMedicamento").val(request.medicamento)
            $("#txtDescripcion").val(request.descripcion)
            $("#txtUser").val(request.iduser)

            $('.modal').modal('show');
        }

        $("#btnNuevo").click(() => {

            mostrarModal(Modelo_base);
        })

        $("#btnGuardar").click(() => {
            let NuevoModelo = Modelo_base;
                NuevoModelo["idTratamiento"] = $("#txtId").val();
                NuevoModelo["tipo"] = $("#txtTipo").val();
                NuevoModelo["medicamento"] = $("#txtMedicamento").val();
                NuevoModelo["descripcion"] = $("#txtDescripcion").val();
                NuevoModelo["idUser"] = $("#txtUser").val();
            

            if ($("#txtId").val() == "0") {
                fetch("Tratamiento/Insert", {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json;charset=utf-8'
                    },
                    body: JSON.stringify(NuevoModelo)
                })
                    .then((response) => {
                        return response.ok ? response.json() : Promise.reject(response)
                    })
                    .then((dataJson) => {

                        if (dataJson.valor) {
                            alert("registrado");
                            $('.modal').modal('hide');
                             listTratamientos();
                           
                        }
                    })
            } else {
                fetch("Tratamiento/Update", {
                    method: "PUT",
                    headers: {
                        'Content-Type': 'application/json;charset=utf-8'
                    },
                    body: JSON.stringify(NuevoModelo)
                })
                    .then((response) => {
                        return response.ok ? response.json() : Promise.reject(response)
                    })
                    .then((dataJson) => {

                        if (dataJson.valor) {
                            alert("editado");
                            $('.modal').modal('hide');
                            listTratamientos();
                        }
                    })

            }

        })

        function listTratamientos() {

            fetch("Tratamiento/Listar")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response)
                })
                .then((dataJson) => {
                    $("#tbTratamiento tbody").html("");

                    let valores = isObjEmpty(dataJson);

                    if (valores == true) {
                        //console.log("no existe datos");
                        $("#tbTratamiento tbody").addClass("text-center").append(
                            $("<tr>").append(
                                $("<td>").attr("colspan", "6").append(
                                    $("<h4>").text("no existe datos en tabla")
                                )
                            )
                        )

                    } else {
                        //console.log("multiples datos");
                        dataJson.forEach((item) => {


                            $("#tbTratamiento tbody").addClass("text-center").append(

                                $("<tr>").append(
                                    $("<td>").text(item.idTratamiento),
                                    $("<td>").text(item.tipo),
                                    $("<td>").text(item.medicamento),
                                    $("<td>").text(item.descripcion),
                                    $("<td>").text(item.idUser),
                                    $("<td>").append(
                                         $("<button>").addClass("btn btn-primary btn-sm me-2 btn-editar fa fa-pencil-square-o").data("request", item).attr("title", "Edit"),
                                        $("<button>").addClass("btn btn-danger btn-sm me-2 btn-eliminar fa fa-trash-o").data("id", item.idTratamiento).attr("title", "Delete"),
                                        $("<button>").addClass("btn btn-primary btn-sm fa fa-eye").attr("title", "Show").attr("disabled", false)
                                    )
                                )

                            )


                        })
                    }
                })

        }

        $("#tbTratamiento tbody").on("click", ".btn-editar", function() {
            let user = $(this).data("request")

            mostrarModal(user)
        })

        $("#tbTratamiento tbody").on("click", ".btn-show", function() {
            let user = $(this).data("request")

            mostrarModal(user)
        })


        $("#tbTratamiento tbody").on("click", ".btn-eliminar", function() {
            let id = $(this).data("id")

            let resultado = window.confirm("¿Desea eliminar el tratamiento?");


            if (resultado) {


                fetch("Tratamiento/Delete?id=" + id, {
                    method: "DELETE"
                })
                    .then((response) => {
                        return response.ok ? response.json() : Promise.reject(response)
                    })
                    .then((dataJson) => {

                        if (dataJson.valor) {
                            listTratamientos();
                        }
                    })


            }

        })

        function isObjEmpty(obj) {
            return Object.keys(obj).length === 0;
        }



    </script>

}
